name: Terraform Workflow

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0  # Specify the desired Terraform version

      - name: Terraform Format
        working-directory: ./helm
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Set up Terraform Cloud credentials 
        run: | 
           echo '{"credentials": {"app.terraform.io": {"token": "${{ secrets.TERRAFORM_CLOUD_TOKEN }}"}}}' > ~/.terraform.d/credentials.tfrc.json
        
      - name: Terraform Init
        working-directory: ./helm
        id: init
        run: terraform init

      - name: Terraform workspace list
        working-directory: ./helm
        id: terraformworkspacelist
        run: terraform workspace list

      - name: terraform workspace select <workspace-name>
        working-directory: ./helm
        id: terraformselectworkspace
        run: terraform workspace select kubernetes-ops-staging-20-eks

      - name: Terraform Init
        working-directory: ./helm
        id: initworkspace
        run: terraform init  

      - name: Terraform Validate
        working-directory: ./helm
        id: validate
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./helm
        id: plan
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./helm
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve

      - name: Post Plan Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('terraform.plan', 'utf8');
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `## Terraform Plan\n\`\`\`\n${plan}\n\`\`\``
            });
